################################################################################
## ~/.vscode/extensions.txt
################################################################################

{{- /* Check the commented content of the result of `chezmoi diff` */}}
{{-    $debug := false }}

{{- /*
     * Compute or set default values for this file. Add yours here.
     * I just find nice to have them handy here and reference them later, and
     * setting them one per line feels more readable than a convoluted,
     * all-in-one dict definition (I tried).
     */}}

{{-    $defaults := dict }}
{{-    $_ := set $defaults "data" dict }}

{{-    if $debug }}
{{       "defaults:" | comment "# " }}
{{       $defaults | toYaml | indent 4 | comment "# " }}
{{-    end }}

{{- /*
     * Start from the defaults and overwrite them with the existing
     * configuration from the configuration file.
     */}}

{{-    $config := $defaults }}

{{-    $configFromFile := include $.chezmoi.configFile | fromYaml }}
{{-    $_ := mustMergeOverwrite $config $configFromFile }}

{{-    if $debug }}
{{       "merged with config file" | comment "# " }}
{{       "config:" | comment "# " }}
{{       $config | toYaml | indent 4 | comment "# " }}
{{-    end }}

angelo-breuer.clock
bierner.markdown-mermaid
casualjim.gotemplate
editorconfig.editorconfig
esbenp.prettier-vscode
ianjsikes.md-graph
nhoizey.gremlins
oderwat.indent-rainbow
redhat.vscode-yaml
streetsidesoftware.code-spell-checker
yzhang.markdown-all-in-one

{{- if lookPath "ansible" }}
redhat.ansible
{{- end }}

{{- if lookPath "az" }}
ms-azure-devops.azure-pipelines
ms-azuretools.vscode-azureterraform
ms-azuretools.vscode-bicep
ms-vscode.azure-account
ms-vscode.azurecli
msazurermtools.azurerm-vscode-tools
{{- end }}

{{- if lookPath "docker" }}
ms-azuretools.vscode-docker
ms-vscode-remote.remote-containers
{{- end }}

{{- if lookPath "git" }}
codezombiech.gitignore
eamodio.gitlens
{{- end }}

{{- if lookPath "go" }}
golang.go
{{- end }}

{{- if lookPath "gpg" }}
JHeilingbrunner.vscode-gnupg-tool
{{- end }}

{{- if lookPath "kubectl" }}
ms-kubernetes-tools.vscode-kubernetes-tools
plex.vscode-regolint
tsandall.opa
{{- end }}

{{- if lookPath "make" }}
ms-vscode.makefile-tools
{{- end }}

{{- if lookPath "pwsh" }}
ms-vscode.powershell
{{- end }}

{{- if or (lookPath "python") (lookPath "python2") (lookPath "python3") }}
ms-python.python
{{- end }}

{{- if lookPath "shellcheck" }}
timonwong.shellcheck
{{- end }}

{{- if lookPath "terraform" }}
hashicorp.terraform
{{- end }}

{{- $class := dig "class" "private" . }}
{{- if eq $class "work" }}
ms-vsliveshare.vsliveshare
ms-vsliveshare.vsliveshare-audio
ms-vsliveshare.vsliveshare-pack
travisthetechie.write-good-linter
{{ end }}


{{- /*
     * Host-specific extras and overrides.
     */}}

{{- /*
     * Load pieces of configuration from hosts-specific configuration files,
     * should any such file exist.
     * Every file's content will be templated, and the result will be added,
     * in the order each appears in the list.
     */}}

{{-    $hostVscodeExtensionsFiles := list
         (joinPath $config.data.hostDir "dot_vscode" "extensions.txt.tmpl")
         (joinPath $config.data.hostDir "dot_vscode" "extensions.txt") }}

{{-    range $f := $hostVscodeExtensionsFiles }}

{{-      if $debug }}
{{         cat "looping on file" $f | comment "# " }}
{{-      end }}

{{-      if stat (joinPath $.chezmoi.sourceDir $f) }}

{{         includeTemplate $f . }}

{{-      end }}

{{-    end }}

{{- /*
     * It is useless to hash the default file's names, as this method is not
     * a real encryption and doing it just makes identifying the right file
     * more difficult. Just add your file path to this list eventually.
     */}}

{{-    $hostEncryptedVscodeExtensionsFiles := list
         (joinPath $config.data.encryptedHostDir "dot_vscode" (print "extensions.txt.tmpl" (dig "age" "suffix" ".age" $config)))
         (joinPath $config.data.encryptedHostDir "dot_vscode" (print "extensions.txt.tmpl" (dig "gpg" "suffix" ".asc" $config)))
         (joinPath $config.data.encryptedHostDir "dot_vscode" (print "extensions.txt" (dig "age" "suffix" ".age" $config)))
         (joinPath $config.data.encryptedHostDir "dot_vscode" (print "extensions.txt" (dig "gpg" "suffix" ".asc" $config))) }}

{{-    range $f := $hostEncryptedVscodeExtensionsFiles }}

{{-      if $debug }}
{{         cat "looping on file" $f | comment "# " }}
{{-      end }}

{{-      if stat (joinPath $.chezmoi.sourceDir $f) }}

{{- /*
     *     For chezmoi to be able to decrypt any encrypted file which content
     *     needs to be loaded, it requires the 'encryption' setting to be
     *     present in the configuration file _before_ the run.
     */}}

{{-        if hasKey $config "encryption" }}

{{           includeTemplate $f . | decrypt }}

{{-        end }}

{{-      end }}

{{-    end }}
